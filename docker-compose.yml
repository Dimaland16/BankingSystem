services:
  # Config Server
  config-server:
    build:
      context: banking-system/config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - EUREKA_URL=http://eureka-server:8761/eureka/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Eureka Server
  eureka-server:
    build:
      context: banking-system/eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - CONFIG_URL=http://config-server:8888
      - EUREKA_URL=http://eureka-server:8761/eureka/
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Api gateway
  api-gateway:
    build:
      context: banking-system/gateway-api
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - CONFIG_URL=http://config-server:8888
      - EUREKA_URL=http://eureka-server:8761/eureka/
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Client Service
  client-service:
    build:
      context: banking-system/client-service
      dockerfile: Dockerfile
    container_name: client-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://client-db:5432/client_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - CONFIG_URL=http://config-server:8888
      - EUREKA_URL=http://eureka-server:8761/eureka/
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      client-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Deposit Service
  deposit-service:
    build:
      context: banking-system/deposit-service
      dockerfile: Dockerfile
    container_name: deposit-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://deposit-db:5432/deposit_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - CONFIG_URL=http://config-server:8888
      - EUREKA_URL=http://eureka-server:8761/eureka
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      client-service:
        condition: service_healthy
      deposit-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 80s

  # Loan Service
  loan-service:
    build:
      context: banking-system/loan-service
      dockerfile: Dockerfile
    container_name: loan-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://loan-db:5432/loan_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - CONFIG_URL=http://config-server:8888
      - EUREKA_URL=http://eureka-server:8761/eureka
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      client-service:
        condition: service_healthy
      loan-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 80s

  # Loan DB
  loan-db:
    image: postgres:17.4
    container_name: loan-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: loan_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - loan-db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "loan_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Deposit DB
  deposit-db:
    image: postgres:17.4
    container_name: deposit-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: deposit_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - deposit-db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "deposit_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  # Client DB
  client-db:
    image: postgres:17.4
    container_name: client-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: client_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - client-db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "client_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  client-db-data:
  deposit-db-data:
  loan-db-data:
